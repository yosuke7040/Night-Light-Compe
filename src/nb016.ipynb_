{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"nb016.ipynb ","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNSi9HXNKiK51rnsy4rIMLv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"FnmWIfr9vdGK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618489670889,"user_tz":-540,"elapsed":44015,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"55eacc1d-a986-408f-c724-ac20a241cf07"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Y-BLRcEexGLR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618489685300,"user_tz":-540,"elapsed":1866,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"c1dbede7-dd25-445e-9dd8-680cd7d07f8c"},"source":["import os\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from matplotlib_venn import venn2\n","#from ptitprince import RainCloud\n","\n","from pandas_profiling import ProfileReport\n","%matplotlib inline\n","pd.set_option('display.max_rows', 50)\n","\n","print(os.getcwd())"],"execution_count":2,"outputs":[{"output_type":"stream","text":["/content\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"4j3OZyeIxG33","executionInfo":{"status":"ok","timestamp":1618489685300,"user_tz":-540,"elapsed":1653,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}}},"source":["from lightgbm import LGBMModel\n","from sklearn import model_selection\n","from sklearn.metrics import mean_squared_error\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.decomposition import PCA\n","from tqdm import tqdm"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"oagkY0y3xOTN","executionInfo":{"status":"ok","timestamp":1618493998964,"user_tz":-540,"elapsed":1011,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}}},"source":["INPUT_DIR = '/content/drive/MyDrive/Colab Notebooks/Solafune/夜間光データから土地価格を予測/data/inputs/'\n","OUTPUT_DIR = '/content/drive/MyDrive/Colab Notebooks/Solafune/夜間光データから土地価格を予測/data/outputs/'\n","NB_NAME = 'nb016'\n","\n","os.makedirs(OUTPUT_DIR, exist_ok=True)\n","\n","train = pd.read_csv(os.path.join(INPUT_DIR, 'TrainDataSet.csv'))\n","test = pd.read_csv(os.path.join(INPUT_DIR, 'EvaluationData.csv'))\n","submission = pd.read_csv(os.path.join(INPUT_DIR, 'UploadFileTemplate.csv'))\n","target = train['AverageLandPrice']"],"execution_count":110,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Pr6T8vaPlYQs"},"source":["# 前処理"]},{"cell_type":"code","metadata":{"id":"CsUPFR6u7pF5","executionInfo":{"status":"ok","timestamp":1618497388082,"user_tz":-540,"elapsed":1322,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}}},"source":["# 面積を追加\n","def calc_area(input_df):\n","    output_df = input_df.copy()\n","    output_df['Area'] = input_df['SumLight'] / input_df['MeanLight']\n","    # 小数点以下でずれあるが、測定地域の面積は変わらないはずなので中央値に置き換え\n","    _mapping = output_df.groupby('PlaceID')['Area'].median()\n","    output_df['Area'] = output_df['PlaceID'].map(_mapping)\n","    # NaNがあるので0置き換え\n","    output_df['Area'] = output_df['Area'].fillna(0)\n","    return output_df"],"execution_count":149,"outputs":[]},{"cell_type":"code","metadata":{"id":"UE_r2xl3E5BA","colab":{"base_uri":"https://localhost:8080/","height":406},"executionInfo":{"status":"ok","timestamp":1618497388083,"user_tz":-540,"elapsed":1013,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"d5753c97-5775-4ca7-e744-63079ba57f0d"},"source":["train = calc_area(train)\n","test = calc_area(test)\n","train"],"execution_count":150,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PlaceID</th>\n","      <th>Year</th>\n","      <th>AverageLandPrice</th>\n","      <th>MeanLight</th>\n","      <th>SumLight</th>\n","      <th>Area</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1128</td>\n","      <td>1993</td>\n","      <td>740.909091</td>\n","      <td>57.571430</td>\n","      <td>403.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1128</td>\n","      <td>1994</td>\n","      <td>739.390909</td>\n","      <td>62.714287</td>\n","      <td>439.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1128</td>\n","      <td>1995</td>\n","      <td>739.390909</td>\n","      <td>61.857143</td>\n","      <td>433.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1128</td>\n","      <td>1996</td>\n","      <td>739.390909</td>\n","      <td>61.714287</td>\n","      <td>432.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1128</td>\n","      <td>1997</td>\n","      <td>739.390909</td>\n","      <td>62.857143</td>\n","      <td>440.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>21878</th>\n","      <td>1141</td>\n","      <td>2009</td>\n","      <td>99.818182</td>\n","      <td>10.978724</td>\n","      <td>1032.0</td>\n","      <td>89.0</td>\n","    </tr>\n","    <tr>\n","      <th>21879</th>\n","      <td>1141</td>\n","      <td>2010</td>\n","      <td>94.000000</td>\n","      <td>16.734043</td>\n","      <td>1573.0</td>\n","      <td>89.0</td>\n","    </tr>\n","    <tr>\n","      <th>21880</th>\n","      <td>1141</td>\n","      <td>2011</td>\n","      <td>89.363636</td>\n","      <td>12.595745</td>\n","      <td>1184.0</td>\n","      <td>89.0</td>\n","    </tr>\n","    <tr>\n","      <th>21881</th>\n","      <td>1141</td>\n","      <td>2012</td>\n","      <td>85.000000</td>\n","      <td>13.775281</td>\n","      <td>1226.0</td>\n","      <td>89.0</td>\n","    </tr>\n","    <tr>\n","      <th>21882</th>\n","      <td>1141</td>\n","      <td>2013</td>\n","      <td>80.545455</td>\n","      <td>13.011236</td>\n","      <td>1158.0</td>\n","      <td>89.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>21883 rows × 6 columns</p>\n","</div>"],"text/plain":["       PlaceID  Year  AverageLandPrice  MeanLight  SumLight  Area\n","0         1128  1993        740.909091  57.571430     403.0   7.0\n","1         1128  1994        739.390909  62.714287     439.0   7.0\n","2         1128  1995        739.390909  61.857143     433.0   7.0\n","3         1128  1996        739.390909  61.714287     432.0   7.0\n","4         1128  1997        739.390909  62.857143     440.0   7.0\n","...        ...   ...               ...        ...       ...   ...\n","21878     1141  2009         99.818182  10.978724    1032.0  89.0\n","21879     1141  2010         94.000000  16.734043    1573.0  89.0\n","21880     1141  2011         89.363636  12.595745    1184.0  89.0\n","21881     1141  2012         85.000000  13.775281    1226.0  89.0\n","21882     1141  2013         80.545455  13.011236    1158.0  89.0\n","\n","[21883 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":150}]},{"cell_type":"markdown","metadata":{"id":"APdaobEolZ2P"},"source":["# 特徴量"]},{"cell_type":"code","metadata":{"id":"gH8HwrzRj7M1","executionInfo":{"status":"ok","timestamp":1618493999898,"user_tz":-540,"elapsed":1085,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}}},"source":["class BaseBlock(object):\n","    def fit(self, input_df, y=None):\n","        return self.transform(input_df)\n","\n","    def transform(self, input_df) -> pd.DataFrame:\n","        raise NotImplementedError()"],"execution_count":113,"outputs":[]},{"cell_type":"code","metadata":{"id":"8hBa3vO1P4tM","executionInfo":{"status":"ok","timestamp":1618493999898,"user_tz":-540,"elapsed":891,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}}},"source":["# count 63\n","class Count63Block(BaseBlock):\n","    def transform(self, input_df):\n","        output_df = pd.DataFrame()\n","        output_df['PlaceID'] = input_df['PlaceID'].copy()\n","\n","        _mapping = input_df[input_df['MeanLight'] == 63].groupby('PlaceID').size()\n","        output_df['count63'] = output_df['PlaceID'].map(_mapping).fillna(0)\n","        return output_df['count63']"],"execution_count":114,"outputs":[]},{"cell_type":"code","metadata":{"id":"delO9TMY2J5C","executionInfo":{"status":"ok","timestamp":1618494000308,"user_tz":-540,"elapsed":1121,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}}},"source":["#SumLightとAreaを順位付け\n","class RankBlock(BaseBlock):\n","    def transform(self, input_df):\n","        _df = []\n","        sumli_rank_df = input_df.groupby('PlaceID')['SumLight'].mean().rank(ascending=False)\n","        area_rank_df = input_df.groupby('PlaceID')['Area'].mean().rank()\n","        _df = pd.concat([sumli_rank_df, area_rank_df], axis=1)\n","        _df.columns = ['SumLight_rank', 'Area_rank']\n","        _df['AreaSumLig_rank'] = ( sumli_rank_df + area_rank_df ) / 2.0\n","\n","        output_df = pd.merge(input_df[['PlaceID']], _df, left_on='PlaceID', right_index=True, how='left')\n","        return output_df.drop('PlaceID', axis=1)"],"execution_count":115,"outputs":[]},{"cell_type":"code","metadata":{"id":"U2ZlquKMjOUU","executionInfo":{"status":"ok","timestamp":1618494000308,"user_tz":-540,"elapsed":946,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}}},"source":["# columns = train.columns\n","# sc_df = pd.DataFrame(StandardScaler().fit_transform(train.fillna(0)), columns=columns)\n","# _mean_df = sc_df.groupby(\"PlaceID\")[[\"Area\"]].mean()\n","# bin = pd.cut(_mean_df[\"Area\"], 10, labels=False).rename(f'Bin_Area')\n","# sns.histplot(data=_mean_df)"],"execution_count":116,"outputs":[]},{"cell_type":"code","metadata":{"id":"m4cVgPMvvLfC","executionInfo":{"status":"ok","timestamp":1618494000712,"user_tz":-540,"elapsed":1155,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}}},"source":["# _mean_df = train.groupby(\"PlaceID\")[[\"Area\"]].mean()\n","# bin = pd.cut(_mean_df[\"Area\"], 10, labels=False).rename(f'Bin_Area')\n","# sns.histplot(data=_mean_df)"],"execution_count":117,"outputs":[]},{"cell_type":"code","metadata":{"id":"IWDBTsRzwbBk","executionInfo":{"status":"ok","timestamp":1618494039814,"user_tz":-540,"elapsed":930,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}}},"source":["# binning\n","class BinningBlock(BaseBlock):\n","    def __init__(self, num_bin, group_key, group_values):\n","        self.num_bin = num_bin\n","        self.group_key = group_key\n","        self.group_values = group_values\n","\n","    def transform(self, input_df):\n","        new_df = []\n","        for gv in self.group_values:\n","            _mean_df = input_df.groupby(self.group_key)[[gv]].mean()\n","            bin = pd.cut(_mean_df[gv], self.num_bin, labels=False).rename(f'Bin_{gv}')\n","            new_df.append(bin)\n","\n","        _df = pd.concat(new_df, axis=1).reset_index()\n","        output_df = pd.merge(input_df[[self.group_key]], _df, on=self.group_key, how='left')\n","        return output_df.drop(self.group_key, axis=1)"],"execution_count":126,"outputs":[]},{"cell_type":"code","metadata":{"id":"hdUZzcoyq2yp","executionInfo":{"status":"ok","timestamp":1618494040856,"user_tz":-540,"elapsed":1065,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}}},"source":["# そのまま使う特徴量\n","class WrapperBlock(BaseBlock):\n","    def __init__(self, function):\n","        self.function = function\n","\n","    def transform(self, input_df):\n","        return self.function(input_df)\n","\n","def origin_features(input_df):\n","    use_columns = [\n","        'Year',\n","        'MeanLight',\n","        'SumLight',\n","        'Area'\n","    ]\n","    return input_df[use_columns]"],"execution_count":127,"outputs":[]},{"cell_type":"code","metadata":{"id":"ol1AYDYaCg38","executionInfo":{"status":"ok","timestamp":1618494040857,"user_tz":-540,"elapsed":857,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}}},"source":["from contextlib import contextmanager\n","from time import time\n","\n","@contextmanager\n","def timer(logger=None,format_str='{:.3f}[s]',prefix=None,suffix=None):\n","    if prefix: format_str = str(prefix) + format_str\n","    if suffix: format_str = format_str + str(suffix)\n","    start = time()\n","    yield\n","    d = time()-start\n","    out_str = format_str.format(d)\n","    if logger:\n","        logger.info(out_str)\n","    else:\n","        print(out_str)"],"execution_count":128,"outputs":[]},{"cell_type":"code","metadata":{"id":"MvfsIFr6eXee","executionInfo":{"status":"ok","timestamp":1618494040857,"user_tz":-540,"elapsed":658,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}}},"source":["from tqdm import tqdm\n","\n","def get_function(block, is_train):\n","    s = mapping = {\n","        True: 'fit',\n","        False: 'transform'\n","    }.get(is_train)\n","    return getattr(block, s)\n","\n","def to_feature(input_df, blocks, is_train=False):\n","    output_df = pd.DataFrame()\n","\n","    for block in tqdm(blocks, total=len(blocks)):\n","        func = get_function(block, is_train)\n","\n","        with timer(prefix='create' + str(block) + ' '):\n","            _df = func(input_df)\n","\n","        assert len(_df) == len(input_df), func.__name__\n","        output_df = pd.concat([output_df, _df], axis=1)\n","\n","    return output_df"],"execution_count":129,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KVd6rgWSUxL3","executionInfo":{"status":"ok","timestamp":1618494041302,"user_tz":-540,"elapsed":915,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"fd9d7d7e-4aaf-44ce-cc58-9994f20ebde9"},"source":["print(len(train['Area'].value_counts()))\n","print(len(train['SumLight'].value_counts()))"],"execution_count":130,"outputs":[{"output_type":"stream","text":["924\n","6981\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KRDgse1x9p1X","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618494041722,"user_tz":-540,"elapsed":1149,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"6bbc4c10-5aec-4fe9-d33a-4019c52f8ccb"},"source":["agg_methods = [\"min\", \"max\", \"median\", \"mean\", \"std\"]\n","\n","num_diffs = range(1, 22)\n","num_shifts = range(1, 22)\n","group_vlaues = [\n","    [\"Year\", \"MeanLight\"],\n","    [\"Year\", \"SumLight\"],\n","    [\"Year\", \"Area\"],\n","]         \n","\n","process_blocks = [\n","    WrapperBlock(origin_features),\n","    Count63Block(),\n","    RankBlock(),\n","    BinningBlock(30, \"PlaceID\", [\"Area\"]),\n","    BinningBlock(30, \"PlaceID\", [\"SumLight\"]),\n","]\n","\n","train_feat_df = to_feature(train, process_blocks, is_train=True)\n","test_feat_df = to_feature(test, process_blocks, is_train=False)"],"execution_count":131,"outputs":[{"output_type":"stream","text":["100%|██████████| 5/5 [00:00<00:00, 95.67it/s]\n","100%|██████████| 5/5 [00:00<00:00, 98.81it/s]"],"name":"stderr"},{"output_type":"stream","text":["create<__main__.WrapperBlock object at 0x7f167b974150> 0.001[s]\n","create<__main__.Count63Block object at 0x7f167b974cd0> 0.010[s]\n","create<__main__.RankBlock object at 0x7f167b974750> 0.011[s]\n","create<__main__.BinningBlock object at 0x7f167b9740d0> 0.010[s]\n","create<__main__.BinningBlock object at 0x7f167b9b4dd0> 0.010[s]\n","create<__main__.WrapperBlock object at 0x7f167b974150> 0.002[s]\n","create<__main__.Count63Block object at 0x7f167b974cd0> 0.005[s]\n","create<__main__.RankBlock object at 0x7f167b974750> 0.014[s]\n","create<__main__.BinningBlock object at 0x7f167b9740d0> 0.009[s]\n","create<__main__.BinningBlock object at 0x7f167b9b4dd0> 0.009[s]\n"],"name":"stdout"},{"output_type":"stream","text":["\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"cQdqe5ib64Cg","executionInfo":{"status":"ok","timestamp":1618494041723,"user_tz":-540,"elapsed":936,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"136c6e49-1d1f-45a0-f0c8-e742f63fa923"},"source":["train_feat_df"],"execution_count":132,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>MeanLight</th>\n","      <th>SumLight</th>\n","      <th>Area</th>\n","      <th>count63</th>\n","      <th>SumLight_rank</th>\n","      <th>Area_rank</th>\n","      <th>AreaSumLig_rank</th>\n","      <th>Bin_Area</th>\n","      <th>Bin_SumLight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1993</td>\n","      <td>57.571430</td>\n","      <td>403.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>915.0</td>\n","      <td>16.5</td>\n","      <td>465.75</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1994</td>\n","      <td>62.714287</td>\n","      <td>439.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>915.0</td>\n","      <td>16.5</td>\n","      <td>465.75</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1995</td>\n","      <td>61.857143</td>\n","      <td>433.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>915.0</td>\n","      <td>16.5</td>\n","      <td>465.75</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1996</td>\n","      <td>61.714287</td>\n","      <td>432.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>915.0</td>\n","      <td>16.5</td>\n","      <td>465.75</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1997</td>\n","      <td>62.857143</td>\n","      <td>440.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>915.0</td>\n","      <td>16.5</td>\n","      <td>465.75</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>21878</th>\n","      <td>2009</td>\n","      <td>10.978724</td>\n","      <td>1032.0</td>\n","      <td>89.0</td>\n","      <td>0.0</td>\n","      <td>681.0</td>\n","      <td>422.0</td>\n","      <td>551.50</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21879</th>\n","      <td>2010</td>\n","      <td>16.734043</td>\n","      <td>1573.0</td>\n","      <td>89.0</td>\n","      <td>0.0</td>\n","      <td>681.0</td>\n","      <td>422.0</td>\n","      <td>551.50</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21880</th>\n","      <td>2011</td>\n","      <td>12.595745</td>\n","      <td>1184.0</td>\n","      <td>89.0</td>\n","      <td>0.0</td>\n","      <td>681.0</td>\n","      <td>422.0</td>\n","      <td>551.50</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21881</th>\n","      <td>2012</td>\n","      <td>13.775281</td>\n","      <td>1226.0</td>\n","      <td>89.0</td>\n","      <td>0.0</td>\n","      <td>681.0</td>\n","      <td>422.0</td>\n","      <td>551.50</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21882</th>\n","      <td>2013</td>\n","      <td>13.011236</td>\n","      <td>1158.0</td>\n","      <td>89.0</td>\n","      <td>0.0</td>\n","      <td>681.0</td>\n","      <td>422.0</td>\n","      <td>551.50</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>21883 rows × 10 columns</p>\n","</div>"],"text/plain":["       Year  MeanLight  SumLight  ...  AreaSumLig_rank  Bin_Area  Bin_SumLight\n","0      1993  57.571430     403.0  ...           465.75         0             0\n","1      1994  62.714287     439.0  ...           465.75         0             0\n","2      1995  61.857143     433.0  ...           465.75         0             0\n","3      1996  61.714287     432.0  ...           465.75         0             0\n","4      1997  62.857143     440.0  ...           465.75         0             0\n","...     ...        ...       ...  ...              ...       ...           ...\n","21878  2009  10.978724    1032.0  ...           551.50         1             0\n","21879  2010  16.734043    1573.0  ...           551.50         1             0\n","21880  2011  12.595745    1184.0  ...           551.50         1             0\n","21881  2012  13.775281    1226.0  ...           551.50         1             0\n","21882  2013  13.011236    1158.0  ...           551.50         1             0\n","\n","[21883 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":132}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HvS6ErujPdS9","executionInfo":{"status":"ok","timestamp":1618494102393,"user_tz":-540,"elapsed":1086,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"c476060f-3f46-4751-a385-5b4dcd7d791f"},"source":["unique_ids = train_feat_df['Bin_Area'].unique()\n","unique_ids\n","np.where(train_feat_df['Bin_Area'].isin([9]))"],"execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 2193,  2194,  2195,  2196,  2197,  2198,  2199,  2200,  2201,\n","         2202,  2203,  2204,  2205,  2206,  2207,  2208,  2209,  2210,\n","         2211,  2212,  2213,  2214,  2215,  2216,  2217,  2218,  2219,\n","         2220,  2221,  2222,  2223,  2224,  2225,  2226,  2227,  2228,\n","         2229,  2230,  2231,  2232,  2233,  2234,  2235,  2236,  4811,\n","         4812,  4813,  4814,  4815,  4816,  4817,  4818,  4819,  4820,\n","         4821,  4822,  4823,  4824,  4825,  4826,  4827,  4828,  4829,\n","         4830,  4831,  4832,  6109,  6110,  6111,  6112,  6113,  6114,\n","         6115,  6116,  6117,  6118,  6119,  6120,  6121,  6122,  6123,\n","         6124,  6125,  6126,  6127,  6128,  6129,  6130,  8661,  8662,\n","         8663,  8664,  8665,  8666,  8667,  8668,  8669,  8670,  8671,\n","         8672,  8673,  8674,  8675,  8676,  8677,  8678,  8679,  8680,\n","         8681,  8682, 10883, 10884, 10885, 10886, 10887, 10888, 10889,\n","        10890, 10891, 10892, 10893, 10894, 10895, 10896, 10897, 10898,\n","        10899, 10900, 10901, 10902, 10903, 10904, 13149, 13150, 13151,\n","        13152, 13153, 13154, 13155, 13156, 13157, 13158, 13159, 13160,\n","        13161, 13162, 13163, 13164, 13165, 13166, 13167, 13168, 13169,\n","        13170, 14843, 14844, 14845, 14846, 14847, 14848, 14849, 14850,\n","        14851, 14852, 14853, 14854, 14855, 14856, 14857, 14858, 14859,\n","        14860, 14861, 14862, 14863, 14864, 16427, 16428, 16429, 16430,\n","        16431, 16432, 16433, 16434, 16435, 16436, 16437, 16438, 16439,\n","        16440, 16441, 16442, 16443, 16444, 16445, 16446, 16447, 16448,\n","        16559, 16560, 16561, 16562, 16563, 16564, 16565, 16566, 16567,\n","        16568, 16569, 16570, 16571, 16572, 16573, 16574, 16575, 16576,\n","        16577, 16578, 16579, 16580, 17153, 17154, 17155, 17156, 17157,\n","        17158, 17159, 17160, 17161, 17162, 17163, 17164, 17165, 17166,\n","        17167, 17168, 17169, 17170, 17171, 17172, 17173, 17174, 18055,\n","        18056, 18057, 18058, 18059, 18060, 18061, 18062, 18063, 18064,\n","        18065, 18066, 18067, 18068, 18069, 18070, 18071, 18072, 18073,\n","        18074, 18075, 18076, 18517, 18518, 18519, 18520, 18521, 18522,\n","        18523, 18524, 18525, 18526, 18527, 18528, 18529, 18530, 18531,\n","        18532, 18533, 18534, 18535, 18536, 18537, 18538, 18539, 18540,\n","        18541, 18542, 18543, 18544, 18545, 18546, 18547, 18548, 18549,\n","        18550, 18551, 18552, 18553, 18554, 18555, 18556, 18557, 18558,\n","        18559, 18560, 18781, 18782, 18783, 18784, 18785, 18786, 18787,\n","        18788, 18789, 18790, 18791, 18792, 18793, 18794, 18795, 18796,\n","        18797, 18798, 18799, 18800, 18801, 18802]),)"]},"metadata":{"tags":[]},"execution_count":139}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T61qYi938T-Q","executionInfo":{"status":"ok","timestamp":1618318856265,"user_tz":-540,"elapsed":937,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"36213b1f-5da1-49a2-beda-09bbd7a5698f"},"source":["a = [1,2,3,4,5,6,7,8,9]\n","b = [1,3,5]\n","tmp = np.repeat(np.nan, 10)\n","tmp[b] = 0\n","tmp"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([nan,  0., nan,  0., nan,  0., nan, nan, nan, nan])"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"toUgadzgOjMO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618494262433,"user_tz":-540,"elapsed":1462,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"e191fc49-24b0-4098-ba03-61cd8b06d951"},"source":["from sklearn.model_selection import KFold\n","\n","# CVのfoldごとにtarget encoding\n","kf = KFold(n_splits=5, shuffle=True, random_state=71)\n","unique_ids = train['PlaceID'].unique()\n","\n","result = []\n","\n","for i, (tr_group_idx, va_group_idx) in enumerate(kf.split(unique_ids)):\n","    print(f'---------fold {i}--------')\n","    tr_group, va_group = unique_ids[tr_group_idx], unique_ids[va_group_idx]\n","    train_idx = np.where(train_feat_df['Bin_Area'].isin(tr_group))[0]\n","    val_idx = np.where(train_feat_df['Bin_Area'].isin(va_group))[0]\n","\n","    tr_x, va_x = train_feat_df.iloc[train_idx].copy(), train_feat_df.iloc[val_idx].copy()\n","    tr_y, va_y = target.iloc[train_idx], target.iloc[val_idx]\n","\n","    for c in ['Bin_Area']:\n","        # 学習データ全体で各カテゴリにおけるtargetの平均を計算\n","        data_tmp = pd.DataFrame({c: tr_x[c], 'target': tr_y})\n","        target_mean = data_tmp.groupby(c)['target'].mean()\n","        # バリデーションデータのカテゴリを置換\n","        va_x.loc[:, c] = va_x[c].map(target_mean)\n","\n","        tmp = np.repeat(np.nan, tr_x.shape[0])\n","        kf_encoding = KFold(n_splits=5, shuffle=True, random_state=71)\n","        cv_unique_ids = data_tmp[c].unique()\n","        for i, (idx1, idx2) in enumerate(kf.split(cv_unique_ids)):\n","            tr_idx1 = np.where(data_tmp['Bin_Area'].isin(idx1))[0]\n","            va_idx2 = np.where(data_tmp['Bin_Area'].isin(idx2))[0]\n","            # out-of-foldで各カテゴリにける目的変数の平均を計算\n","            target_mean = data_tmp.iloc[tr_idx1].groupby(c)['target'].mean()\n","            #print(target_mean)\n","            #print(f'idx1={idx1}')\n","            #print(f'idx2={idx2}')\n","            \n","            # 変換後の値を一時配列に格納\n","            #tmp[va_idx2] = tr_x[c].iloc[va_idx2].map(target_mean)\n","            tmp[va_idx2] = data_tmp['Bin_Area'].iloc[va_idx2].map(target_mean)\n","            #print(data_tmp['Bin_Area'].iloc[va_idx2])#.map(target_mean))\n","\n","        tr_x.loc[:, c] = tmp\n","\n","    #print(tr_x)\n","    result.append((tr_x, va_x))\n","\n","    #yield train_idx, val_idx\n","\n"],"execution_count":142,"outputs":[{"output_type":"stream","text":["---------fold 0--------\n","---------fold 1--------\n","---------fold 2--------\n","---------fold 3--------\n","---------fold 4--------\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tEc0xYTzYOaW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618494439602,"user_tz":-540,"elapsed":1193,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"386bc705-7bdd-4935-a6cf-3ea2a2797f3c"},"source":["result"],"execution_count":143,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(       Year  MeanLight  SumLight  ...  AreaSumLig_rank  Bin_Area  Bin_SumLight\n","  126    1993   3.217608    1937.0  ...           659.00       NaN             1\n","  127    1994   2.380399    1433.0  ...           659.00       NaN             1\n","  128    1995   4.098007    2467.0  ...           659.00       NaN             1\n","  129    1996   5.109634    3076.0  ...           659.00       NaN             1\n","  130    1997   1.873754    1128.0  ...           659.00       NaN             1\n","  ...     ...        ...       ...  ...              ...       ...           ...\n","  21768  2009   3.807571    1207.0  ...           681.75       NaN             1\n","  21769  2010   6.832807    2166.0  ...           681.75       NaN             1\n","  21770  2011   5.233439    1659.0  ...           681.75       NaN             1\n","  21771  2012   4.203125    1345.0  ...           681.75       NaN             1\n","  21772  2013   4.850000    1552.0  ...           681.75       NaN             1\n","  \n","  [4543 rows x 10 columns],\n","         Year  MeanLight  SumLight  ...  AreaSumLig_rank  Bin_Area  Bin_SumLight\n","  21     1993   2.521277     237.0  ...            685.5       NaN             0\n","  22     1994   3.531915     332.0  ...            685.5       NaN             0\n","  23     1995   4.670213     439.0  ...            685.5       NaN             0\n","  24     1996   4.382979     412.0  ...            685.5       NaN             0\n","  25     1997   4.127660     388.0  ...            685.5       NaN             0\n","  ...     ...        ...       ...  ...              ...       ...           ...\n","  21878  2009  10.978724    1032.0  ...            551.5       NaN             0\n","  21879  2010  16.734043    1573.0  ...            551.5       NaN             0\n","  21880  2011  12.595745    1184.0  ...            551.5       NaN             0\n","  21881  2012  13.775281    1226.0  ...            551.5       NaN             0\n","  21882  2013  13.011236    1158.0  ...            551.5       NaN             0\n","  \n","  [4953 rows x 10 columns]),\n"," (       Year  MeanLight  SumLight  ...  AreaSumLig_rank  Bin_Area  Bin_SumLight\n","  21     1993   2.521277     237.0  ...            685.5       NaN             0\n","  22     1994   3.531915     332.0  ...            685.5       NaN             0\n","  23     1995   4.670213     439.0  ...            685.5       NaN             0\n","  24     1996   4.382979     412.0  ...            685.5       NaN             0\n","  25     1997   4.127660     388.0  ...            685.5       NaN             0\n","  ...     ...        ...       ...  ...              ...       ...           ...\n","  21878  2009  10.978724    1032.0  ...            551.5       NaN             0\n","  21879  2010  16.734043    1573.0  ...            551.5       NaN             0\n","  21880  2011  12.595745    1184.0  ...            551.5       NaN             0\n","  21881  2012  13.775281    1226.0  ...            551.5       NaN             0\n","  21882  2013  13.011236    1158.0  ...            551.5       NaN             0\n","  \n","  [6845 rows x 10 columns],\n","         Year  MeanLight  SumLight  ...  AreaSumLig_rank  Bin_Area  Bin_SumLight\n","  315    1993   1.864865     276.0  ...            748.5       NaN             0\n","  316    1994   3.250000     481.0  ...            748.5       NaN             0\n","  317    1995   3.182432     471.0  ...            748.5       NaN             0\n","  318    1996   2.891892     428.0  ...            748.5       NaN             0\n","  319    1997   2.770270     410.0  ...            748.5       NaN             0\n","  ...     ...        ...       ...  ...              ...       ...           ...\n","  21108  2009  22.639751    3645.0  ...            406.5       NaN             3\n","  21109  2010  30.422359    4898.0  ...            406.5       NaN             3\n","  21110  2011  26.484472    4264.0  ...            406.5       NaN             3\n","  21111  2012  26.700001    4272.0  ...            406.5       NaN             3\n","  21112  2013  27.006250    4321.0  ...            406.5       NaN             3\n","  \n","  [2651 rows x 10 columns]),\n"," (       Year  MeanLight  SumLight  ...  AreaSumLig_rank  Bin_Area  Bin_SumLight\n","  21     1993   2.521277     237.0  ...            685.5       NaN             0\n","  22     1994   3.531915     332.0  ...            685.5       NaN             0\n","  23     1995   4.670213     439.0  ...            685.5       NaN             0\n","  24     1996   4.382979     412.0  ...            685.5       NaN             0\n","  25     1997   4.127660     388.0  ...            685.5       NaN             0\n","  ...     ...        ...       ...  ...              ...       ...           ...\n","  21878  2009  10.978724    1032.0  ...            551.5       NaN             0\n","  21879  2010  16.734043    1573.0  ...            551.5       NaN             0\n","  21880  2011  12.595745    1184.0  ...            551.5       NaN             0\n","  21881  2012  13.775281    1226.0  ...            551.5       NaN             0\n","  21882  2013  13.011236    1158.0  ...            551.5       NaN             0\n","  \n","  [9080 rows x 10 columns],\n","         Year  MeanLight  SumLight  ...  AreaSumLig_rank  Bin_Area  Bin_SumLight\n","  1351   1994   1.539900    1235.0  ...            645.5       NaN             2\n","  1352   1995   3.307980    2653.0  ...            645.5       NaN             2\n","  1353   1996   3.374065    2706.0  ...            645.5       NaN             2\n","  1354   1997   0.943890     757.0  ...            645.5       NaN             2\n","  1355   1998   3.421446    2744.0  ...            645.5       NaN             2\n","  ...     ...        ...       ...  ...              ...       ...           ...\n","  20448  2009   2.994166    2566.0  ...            611.5       NaN             2\n","  20449  2010   5.528588    4738.0  ...            611.5       NaN             2\n","  20450  2011   4.112019    3524.0  ...            611.5       NaN             2\n","  20451  2012   4.422325    3843.0  ...            611.5       NaN             2\n","  20452  2013   3.696203    3212.0  ...            611.5       NaN             2\n","  \n","  [416 rows x 10 columns]),\n"," (       Year  MeanLight  SumLight  ...  AreaSumLig_rank  Bin_Area  Bin_SumLight\n","  21     1993   2.521277     237.0  ...            685.5       NaN             0\n","  22     1994   3.531915     332.0  ...            685.5       NaN             0\n","  23     1995   4.670213     439.0  ...            685.5       NaN             0\n","  24     1996   4.382979     412.0  ...            685.5       NaN             0\n","  25     1997   4.127660     388.0  ...            685.5       NaN             0\n","  ...     ...        ...       ...  ...              ...       ...           ...\n","  21878  2009  10.978724    1032.0  ...            551.5       NaN             0\n","  21879  2010  16.734043    1573.0  ...            551.5       NaN             0\n","  21880  2011  12.595745    1184.0  ...            551.5       NaN             0\n","  21881  2012  13.775281    1226.0  ...            551.5       NaN             0\n","  21882  2013  13.011236    1158.0  ...            551.5       NaN             0\n","  \n","  [8042 rows x 10 columns],\n","         Year  MeanLight  SumLight  ...  AreaSumLig_rank  Bin_Area  Bin_SumLight\n","  126    1993   3.217608    1937.0  ...           659.00       NaN             1\n","  127    1994   2.380399    1433.0  ...           659.00       NaN             1\n","  128    1995   4.098007    2467.0  ...           659.00       NaN             1\n","  129    1996   5.109634    3076.0  ...           659.00       NaN             1\n","  130    1997   1.873754    1128.0  ...           659.00       NaN             1\n","  ...     ...        ...       ...  ...              ...       ...           ...\n","  21768  2009   3.807571    1207.0  ...           681.75       NaN             1\n","  21769  2010   6.832807    2166.0  ...           681.75       NaN             1\n","  21770  2011   5.233439    1659.0  ...           681.75       NaN             1\n","  21771  2012   4.203125    1345.0  ...           681.75       NaN             1\n","  21772  2013   4.850000    1552.0  ...           681.75       NaN             1\n","  \n","  [1454 rows x 10 columns]),\n"," (       Year  MeanLight  SumLight  ...  AreaSumLig_rank  Bin_Area  Bin_SumLight\n","  21     1993   2.521277     237.0  ...            685.5       NaN             0\n","  22     1994   3.531915     332.0  ...            685.5       NaN             0\n","  23     1995   4.670213     439.0  ...            685.5       NaN             0\n","  24     1996   4.382979     412.0  ...            685.5       NaN             0\n","  25     1997   4.127660     388.0  ...            685.5       NaN             0\n","  ...     ...        ...       ...  ...              ...       ...           ...\n","  21878  2009  10.978724    1032.0  ...            551.5       NaN             0\n","  21879  2010  16.734043    1573.0  ...            551.5       NaN             0\n","  21880  2011  12.595745    1184.0  ...            551.5       NaN             0\n","  21881  2012  13.775281    1226.0  ...            551.5       NaN             0\n","  21882  2013  13.011236    1158.0  ...            551.5       NaN             0\n","  \n","  [9474 rows x 10 columns],\n","         Year  MeanLight  SumLight  ...  AreaSumLig_rank  Bin_Area  Bin_SumLight\n","  11983  1992  18.511936   27916.0  ...            510.0       NaN            21\n","  11984  1993  17.240053   25998.0  ...            510.0       NaN            21\n","  11985  1994  17.816313   26867.0  ...            510.0       NaN            21\n","  11986  1995  18.929708   28546.0  ...            510.0       NaN            21\n","  11987  1996  17.759283   26781.0  ...            510.0       NaN            21\n","  11988  1997  17.463528   26335.0  ...            510.0       NaN            21\n","  11989  1998  16.890583   25471.0  ...            510.0       NaN            21\n","  11990  1999  17.463528   26335.0  ...            510.0       NaN            21\n","  11991  2000  18.696949   28195.0  ...            510.0       NaN            21\n","  11992  2001  18.288462   27579.0  ...            510.0       NaN            21\n","  11993  2002  19.003979   28658.0  ...            510.0       NaN            21\n","  11994  2003  16.177055   24395.0  ...            510.0       NaN            21\n","  11995  2004  17.550398   26466.0  ...            510.0       NaN            21\n","  11996  2005  16.965517   25584.0  ...            510.0       NaN            21\n","  11997  2006  17.583555   26516.0  ...            510.0       NaN            21\n","  11998  2007  19.463528   29351.0  ...            510.0       NaN            21\n","  11999  2008  18.444960   27815.0  ...            510.0       NaN            21\n","  12000  2009  17.009291   25633.0  ...            510.0       NaN            21\n","  12001  2010  19.764433   29785.0  ...            510.0       NaN            21\n","  12002  2011  17.672197   26632.0  ...            510.0       NaN            21\n","  12003  2012  19.916445   30034.0  ...            510.0       NaN            21\n","  12004  2013  19.955570   30093.0  ...            510.0       NaN            21\n","  \n","  [22 rows x 10 columns])]"]},"metadata":{"tags":[]},"execution_count":143}]},{"cell_type":"code","metadata":{"id":"Q4wlkGEQYOWs"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"L-yvlYTVYNw-"},"source":["class GroupKFold:\n","    \"\"\"\n","    GroupKFold with random shuffle with a sklearn-like structure\n","    \"\"\"\n","\n","    def __init__(self, n_splits=4, shuffle=True, random_state=1993):\n","        self.n_splits = n_splits\n","        self.shuffle = shuffle\n","        self.random_state = random_state\n","\n","    def get_n_splits(self, X=None, y=None, group=None):\n","        return self.n_splits\n","\n","    def split(self, X=None, y=None, group=None):\n","        kf = model_selection.KFold(n_splits=self.n_splits, shuffle=self.shuffle, random_state=self.random_state)\n","        unique_ids = group.unique()\n","        for tr_group_idx, va_group_idx in kf.split(unique_ids):\n","            # split group\n","            tr_group, va_group = unique_ids[tr_group_idx], unique_ids[va_group_idx]\n","            train_idx = np.where(group.isin(tr_group))[0]\n","            val_idx = np.where(group.isin(va_group))[0]\n","            yield train_idx, val_idx\n","\n","\n","# PlaceID をキーにした Group K fold\n","def make_gkf(X, y, n_splits=5, random_state=1993):\n","    gkf = GroupKFold(n_splits=n_splits, random_state=random_state)\n","    return list(gkf.split(X, y, group))\n","\n","\n","# 評価関数(log(目的変数)を使っているためrmseを用いる)\n","def root_mean_squared_error(y_true, y_pred):\n","    return mean_squared_error(y_true, y_pred) ** .5"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"y3z7q7v7dE00","executionInfo":{"status":"ok","timestamp":1618321112277,"user_tz":-540,"elapsed":623,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"3731d935-c8b8-4e82-ff53-956f0d54edf0"},"source":["train_feat_df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>MeanLight</th>\n","      <th>SumLight</th>\n","      <th>Area</th>\n","      <th>count63</th>\n","      <th>SumLight_rank</th>\n","      <th>Area_rank</th>\n","      <th>AreaSumLig_rank</th>\n","      <th>Bin_Area</th>\n","      <th>Bin_SumLight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1993</td>\n","      <td>57.571430</td>\n","      <td>403.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>915.0</td>\n","      <td>16.5</td>\n","      <td>465.75</td>\n","      <td>0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1994</td>\n","      <td>62.714287</td>\n","      <td>439.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>915.0</td>\n","      <td>16.5</td>\n","      <td>465.75</td>\n","      <td>0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1995</td>\n","      <td>61.857143</td>\n","      <td>433.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>915.0</td>\n","      <td>16.5</td>\n","      <td>465.75</td>\n","      <td>0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1996</td>\n","      <td>61.714287</td>\n","      <td>432.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>915.0</td>\n","      <td>16.5</td>\n","      <td>465.75</td>\n","      <td>0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1997</td>\n","      <td>62.857143</td>\n","      <td>440.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>915.0</td>\n","      <td>16.5</td>\n","      <td>465.75</td>\n","      <td>0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>21878</th>\n","      <td>2009</td>\n","      <td>10.978724</td>\n","      <td>1032.0</td>\n","      <td>89.0</td>\n","      <td>0.0</td>\n","      <td>681.0</td>\n","      <td>422.0</td>\n","      <td>551.50</td>\n","      <td>3</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>21879</th>\n","      <td>2010</td>\n","      <td>16.734043</td>\n","      <td>1573.0</td>\n","      <td>89.0</td>\n","      <td>0.0</td>\n","      <td>681.0</td>\n","      <td>422.0</td>\n","      <td>551.50</td>\n","      <td>3</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>21880</th>\n","      <td>2011</td>\n","      <td>12.595745</td>\n","      <td>1184.0</td>\n","      <td>89.0</td>\n","      <td>0.0</td>\n","      <td>681.0</td>\n","      <td>422.0</td>\n","      <td>551.50</td>\n","      <td>3</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>21881</th>\n","      <td>2012</td>\n","      <td>13.775281</td>\n","      <td>1226.0</td>\n","      <td>89.0</td>\n","      <td>0.0</td>\n","      <td>681.0</td>\n","      <td>422.0</td>\n","      <td>551.50</td>\n","      <td>3</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>21882</th>\n","      <td>2013</td>\n","      <td>13.011236</td>\n","      <td>1158.0</td>\n","      <td>89.0</td>\n","      <td>0.0</td>\n","      <td>681.0</td>\n","      <td>422.0</td>\n","      <td>551.50</td>\n","      <td>3</td>\n","      <td>14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>21883 rows × 10 columns</p>\n","</div>"],"text/plain":["       Year  MeanLight  SumLight  ...  AreaSumLig_rank  Bin_Area  Bin_SumLight\n","0      1993  57.571430     403.0  ...           465.75         0             5\n","1      1994  62.714287     439.0  ...           465.75         0             5\n","2      1995  61.857143     433.0  ...           465.75         0             5\n","3      1996  61.714287     432.0  ...           465.75         0             5\n","4      1997  62.857143     440.0  ...           465.75         0             5\n","...     ...        ...       ...  ...              ...       ...           ...\n","21878  2009  10.978724    1032.0  ...           551.50         3            14\n","21879  2010  16.734043    1573.0  ...           551.50         3            14\n","21880  2011  12.595745    1184.0  ...           551.50         3            14\n","21881  2012  13.775281    1226.0  ...           551.50         3            14\n","21882  2013  13.011236    1158.0  ...           551.50         3            14\n","\n","[21883 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":38}]},{"cell_type":"code","metadata":{"id":"G0ZwI6rRXf-5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618494871567,"user_tz":-540,"elapsed":925,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"da3927df-065e-413b-d7d9-8c2148d163ea"},"source":["# この分割をPlaceIDをキーとしてGroupKFoldしていくといいのでは？\n","\n","\n","from sklearn.model_selection import KFold\n","\n","data_temp = train_feat_df[['Bin_Area', 'Bin_SumLight']]\n","data_temp = pd.concat([data_temp, target, train[\"PlaceID\"]], axis=1)\n","\n","for c in ['Bin_Area']:#, 'Bin_SumLight']:\n","    target_mean = data_temp.groupby(c)['AverageLandPrice'].mean()\n","    test_feat_df[f'target_{c}'] = test_feat_df[c].map(target_mean)\n","\n","    temp = np.repeat(np.nan, data_temp.shape[0])\n","\n","    unique_ids = data_temp[\"PlaceID\"].unique()\n","    kf = KFold(n_splits=5, shuffle=True, random_state=71)\n","    for idx1, idx2 in kf.split(unique_ids):\n","        print('-----------------------------------------------------------')\n","        tr_idx = np.where(data_temp[\"PlaceID\"].isin(idx1))[0]\n","        va_idx = np.where(data_temp[\"PlaceID\"].isin(idx2))[0]\n","        target_mean = data_temp.iloc[tr_idx].groupby(c)['AverageLandPrice'].mean()\n","        print(target_mean)\n","\n","        temp[va_idx] = data_temp[c].iloc[va_idx].map(target_mean)\n","        print(temp[va_idx])\n","        # a = data_temp[c].iloc[va_idx].unique()\n","        # print(a)\n","        # a.sort() #こいつはNoneしかかえさない。あとこのソートは破壊的\n","        # print(a)\n","\n","    #for x in temp:\n","    #    print(x)\n","    data_temp[f'target_{c}'] = temp\n","\n","\n","    # binの数を少なくしてもnanは出てきそうだ。つまりこれで特徴量として入れてみる？"],"execution_count":144,"outputs":[{"output_type":"stream","text":["-----------------------------------------------------------\n","Bin_Area\n","0     1352.621538\n","1      481.424777\n","2      442.182645\n","3      354.688917\n","4      416.029128\n","5      687.120102\n","6      341.939423\n","7      497.126590\n","8      289.634711\n","9      295.778237\n","10     464.580303\n","11     285.831714\n","12     385.899725\n","13     574.265083\n","14     626.329339\n","15     268.057851\n","17     198.852893\n","18     356.958678\n","20    1318.829339\n","29     687.738843\n","Name: AverageLandPrice, dtype: float64\n","[1352.62153831 1352.62153831 1352.62153831 ...  416.0291277   416.0291277\n","  416.0291277 ]\n","-----------------------------------------------------------\n","Bin_Area\n","0     1577.165402\n","1      519.809720\n","2      429.558515\n","3      342.211384\n","4      274.828325\n","5      665.202795\n","6      334.090369\n","7      451.750301\n","8      375.888659\n","9      363.068388\n","10     958.853202\n","11     236.085262\n","12     385.899725\n","13     862.795455\n","14     626.329339\n","15     268.057851\n","16     298.959091\n","17     219.957851\n","18    1347.128099\n","19     291.896488\n","29     687.738843\n","Name: AverageLandPrice, dtype: float64\n","[519.80971982 519.80971982 519.80971982 ... 958.85320248 958.85320248\n"," 958.85320248]\n","-----------------------------------------------------------\n","Bin_Area\n","0     1580.792926\n","1      531.757507\n","2      414.308792\n","3      360.377490\n","4      384.480617\n","5      707.735002\n","6      314.880634\n","7      475.692231\n","8      355.013577\n","9      301.747107\n","10     853.688099\n","11     288.510885\n","12     385.899725\n","13     574.265083\n","14     811.590909\n","15     329.797107\n","16     298.959091\n","17     198.852893\n","18    1347.128099\n","19     291.896488\n","20    1318.829339\n","29     687.738843\n","Name: AverageLandPrice, dtype: float64\n","[531.75750662 531.75750662 531.75750662 ... 384.4806175  384.4806175\n"," 384.4806175 ]\n","-----------------------------------------------------------\n","Bin_Area\n","0     1272.332619\n","1      522.982072\n","2      372.328130\n","3      367.587832\n","4      357.807031\n","5      626.677209\n","6      210.818366\n","7      416.244825\n","8      386.392304\n","9      341.909366\n","10    1021.781405\n","11     346.564165\n","13     574.265083\n","14     881.307231\n","15     268.057851\n","16     298.959091\n","17     177.747934\n","18    1347.128099\n","19     291.896488\n","20    1318.829339\n","29     687.738843\n","Name: AverageLandPrice, dtype: float64\n","[1272.33261872 1272.33261872 1272.33261872 ... 1272.33261872 1272.33261872\n"," 1272.33261872]\n","-----------------------------------------------------------\n","Bin_Area\n","0     1414.691256\n","1      520.475252\n","2      434.921490\n","3      396.663545\n","4      319.923790\n","5      424.973373\n","6      327.586203\n","7      522.988661\n","8      380.547291\n","9      325.625775\n","10     872.260537\n","11     291.991627\n","12     385.899725\n","13     285.734711\n","14     186.089876\n","15     206.318595\n","16     298.959091\n","17     198.852893\n","18    2337.297521\n","19     291.896488\n","20    1318.829339\n","Name: AverageLandPrice, dtype: float64\n","[520.47525211 520.47525211 520.47525211 ... 396.66354515 396.66354515\n"," 396.66354515]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lFSh8ZCvYPDR","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1618494877169,"user_tz":-540,"elapsed":1417,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"aa011d85-fe40-4954-f15c-eb8046da1ff5"},"source":["data_temp.groupby('PlaceID').mean().head(50)"],"execution_count":145,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bin_Area</th>\n","      <th>Bin_SumLight</th>\n","      <th>AverageLandPrice</th>\n","      <th>target_Bin_Area</th>\n","    </tr>\n","    <tr>\n","      <th>PlaceID</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>142.388843</td>\n","      <td>522.982072</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>802.607851</td>\n","      <td>372.328130</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>504.176860</td>\n","      <td>414.308792</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>391.243388</td>\n","      <td>1580.792926</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>141.901240</td>\n","      <td>1414.691256</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>722.009091</td>\n","      <td>1414.691256</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>818.146281</td>\n","      <td>522.982072</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1200.322727</td>\n","      <td>1577.165402</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>328.679752</td>\n","      <td>1352.621538</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>95.815702</td>\n","      <td>367.587832</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>419.279752</td>\n","      <td>274.828325</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>61.519481</td>\n","      <td>531.757507</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2853.263223</td>\n","      <td>1352.621538</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>305.601240</td>\n","      <td>520.475252</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>194.776190</td>\n","      <td>1577.165402</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1506.780165</td>\n","      <td>1272.332619</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>275.459504</td>\n","      <td>481.424777</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>860.954545</td>\n","      <td>1272.332619</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>235.522727</td>\n","      <td>519.809720</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>253.831818</td>\n","      <td>442.182645</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>31.818182</td>\n","      <td>1414.691256</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>1113.794628</td>\n","      <td>481.424777</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>203.307851</td>\n","      <td>360.377490</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>121.826860</td>\n","      <td>414.308792</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1288.454132</td>\n","      <td>1352.621538</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>10</td>\n","      <td>19</td>\n","      <td>1706.266942</td>\n","      <td>464.580303</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>361.404959</td>\n","      <td>1580.792926</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>598.714463</td>\n","      <td>210.818366</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>280.610331</td>\n","      <td>1580.792926</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>195.983182</td>\n","      <td>1352.621538</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>96.614876</td>\n","      <td>531.757507</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>11</td>\n","      <td>8</td>\n","      <td>243.272314</td>\n","      <td>291.991627</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>300.212397</td>\n","      <td>522.988661</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>362.057438</td>\n","      <td>342.211384</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1332.237190</td>\n","      <td>1414.691256</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>380.326033</td>\n","      <td>1272.332619</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>261.162810</td>\n","      <td>522.982072</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>396.490909</td>\n","      <td>327.586203</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1266.260744</td>\n","      <td>1414.691256</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1177.834298</td>\n","      <td>1352.621538</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>251.354959</td>\n","      <td>360.377490</td>\n","    </tr>\n","    <tr>\n","      <th>66</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>670.200000</td>\n","      <td>319.923790</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>219.730992</td>\n","      <td>442.182645</td>\n","    </tr>\n","    <tr>\n","      <th>70</th>\n","      <td>20</td>\n","      <td>21</td>\n","      <td>1318.829339</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>230.914050</td>\n","      <td>1580.792926</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>136.582231</td>\n","      <td>434.921490</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>535.599134</td>\n","      <td>1414.691256</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>125.463223</td>\n","      <td>520.475252</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>315.434298</td>\n","      <td>481.424777</td>\n","    </tr>\n","    <tr>\n","      <th>77</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>316.879752</td>\n","      <td>360.377490</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Bin_Area  Bin_SumLight  AverageLandPrice  target_Bin_Area\n","PlaceID                                                           \n","1               1             1        142.388843       522.982072\n","2               2             6        802.607851       372.328130\n","4               2             5        504.176860       414.308792\n","8               0             1        391.243388      1580.792926\n","10              0             0        141.901240      1414.691256\n","11              0             0        722.009091      1414.691256\n","13              1             1        818.146281       522.982072\n","14              0             0       1200.322727      1577.165402\n","18              0             1        328.679752      1352.621538\n","19              3             1         95.815702       367.587832\n","20              4             2        419.279752       274.828325\n","21              1             0         61.519481       531.757507\n","22              0             0       2853.263223      1352.621538\n","23              1             2        305.601240       520.475252\n","24              0             0        194.776190      1577.165402\n","25              0             1       1506.780165      1272.332619\n","26              1             3        275.459504       481.424777\n","28              0             0        860.954545      1272.332619\n","31              1             0        235.522727       519.809720\n","32              2             0        253.831818       442.182645\n","33              0             0         31.818182      1414.691256\n","34              1             4       1113.794628       481.424777\n","36              3             0        203.307851       360.377490\n","40              2             1        121.826860       414.308792\n","42              0             1       1288.454132      1352.621538\n","43             10            19       1706.266942       464.580303\n","44              0             1        361.404959      1580.792926\n","45              6             1        598.714463       210.818366\n","46              0             1        280.610331      1580.792926\n","48              0             0        195.983182      1352.621538\n","50              1             0         96.614876       531.757507\n","51             11             8        243.272314       291.991627\n","52              7             3        300.212397       522.988661\n","54              3             2        362.057438       342.211384\n","55              0             1       1332.237190      1414.691256\n","56              0             0        380.326033      1272.332619\n","57              1             2        261.162810       522.982072\n","58              6             6        396.490909       327.586203\n","60              0             0       1266.260744      1414.691256\n","63              0             2       1177.834298      1352.621538\n","64              3             1        251.354959       360.377490\n","66              4             4        670.200000       319.923790\n","68              2             1        219.730992       442.182645\n","70             20            21       1318.829339              NaN\n","71              0             0        230.914050      1580.792926\n","72              2             1        136.582231       434.921490\n","74              0             2        535.599134      1414.691256\n","75              1             1        125.463223       520.475252\n","76              1             1        315.434298       481.424777\n","77              3             0        316.879752       360.377490"]},"metadata":{"tags":[]},"execution_count":145}]},{"cell_type":"code","metadata":{"id":"3f42BEFJYPAQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618322026517,"user_tz":-540,"elapsed":394,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"9e6f5d8f-4ed5-43cb-f010-7d244ce3b146"},"source":["data_temp['PlaceID'].nunique()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1018"]},"metadata":{"tags":[]},"execution_count":66}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":171},"id":"5YYxQvSMl8FQ","executionInfo":{"status":"error","timestamp":1618322028304,"user_tz":-540,"elapsed":709,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"1b467ea4-bd83-4854-af84-fed590f6ee69"},"source":["result[0][0].head(50)\n"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-67-40c8a02542bd>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mresult\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m50\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'result' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i78tMHYNPKWv","executionInfo":{"status":"ok","timestamp":1618119787838,"user_tz":-540,"elapsed":824,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"adc7f102-8b54-4dcc-9894-e9789a52e4d5"},"source":["target_mean"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Bin_SumLight\n","0       281.326940\n","1       111.418514\n","2       280.256849\n","3       210.458813\n","4       244.851973\n","          ...     \n","321    2022.127922\n","351    4167.738312\n","365    1285.841711\n","368    1257.367464\n","499    1530.785167\n","Name: target, Length: 150, dtype: float64"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"baFNIUrKXTZo"},"source":["from sklearn.model_selection import KFold\n","\n","data_temp = train_feat_df[['Bin_Area', 'Bin_SumLight']]\n","data_temp = pd.concat([data_temp, target], axis=1)\n","\n","for c in ['Bin_Area', 'Bin_SumLight']:\n","    target_mean = data_temp.groupby(c)['AverageLandPrice'].mean()\n","    test_feat_df[f'target_{c}'] = test_feat_df[c].map(target_mean)\n","\n","    temp = np.repeat(np.nan, train_feat_df.shape[0])\n","\n","    kf = KFold(n_splits=5, shuffle=True, random_state=71)\n","    for idx_1, idx_2 in kf.split(train_feat_df):\n","        target_mean = data_temp.iloc[idx_1].groupby(c)['AverageLandPrice'].mean()\n","        temp[idx_2] = train_feat_df[c].iloc[idx_2].map(target_mean)\n","\n","    train_feat_df[f'target_{c}'] = temp"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AzgwHGM6tGi3","executionInfo":{"status":"ok","timestamp":1618034499616,"user_tz":-540,"elapsed":23192,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"50c06ac1-f974-4d46-e994-0e8b36c940b3"},"source":["train_feat_df.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Year', 'MeanLight', 'SumLight', 'Area', 'count63',\n","       'agg_min_MeanLight_grpby_PlaceID', 'agg_min_SumLight_grpby_PlaceID',\n","       'agg_min_Area_grpby_PlaceID', 'agg_max_MeanLight_grpby_PlaceID',\n","       'agg_max_SumLight_grpby_PlaceID',\n","       ...\n","       'Corr=Year-MeanLight', 'Corr=Year-SumLight', 'Corr=Year-Area',\n","       'SumLight_rank', 'Area_rank', 'AreaSumLig_rank', 'Bin_Area',\n","       'Bin_SumLight', 'target_Bin_Area', 'target_Bin_SumLight'],\n","      dtype='object', length=253)"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VzEF8L4bQYoo","executionInfo":{"status":"ok","timestamp":1618034499616,"user_tz":-540,"elapsed":23189,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"d060f086-4cb2-40eb-d591-78e5115e2e85"},"source":["train_feat_df.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(21883, 253)"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xbDB0sSPR9Kq","executionInfo":{"status":"ok","timestamp":1618049883238,"user_tz":-540,"elapsed":683,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"56596873-7764-4a39-9f73-4f9ffea64a41"},"source":["fold = KFold(n_splits=5, shuffle=True, random_state=71)\n","cv = list(fold.split(train_feat_df))\n","len(cv[0])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{"tags":[]},"execution_count":41}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DiUC654NSplC","executionInfo":{"status":"ok","timestamp":1618049945971,"user_tz":-540,"elapsed":375,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"4e4fd042-9466-47bc-ff45-537dd10128a8"},"source":["print(len(v) for v in cv)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<generator object <genexpr> at 0x7fc0d0719ad0>\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":171},"id":"2_iX0qp2SfTK","executionInfo":{"status":"error","timestamp":1618049969957,"user_tz":-540,"elapsed":567,"user":{"displayName":"おねです","photoUrl":"","userId":"09513891075447620928"}},"outputId":"e3142f40-37cb-4050-f98b-3eceac021829"},"source":["cv"],"execution_count":null,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-44-64aca094f652>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mcv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'list' object has no attribute 'size'"]}]},{"cell_type":"code","metadata":{"id":"eEIzhVw8c9DM"},"source":["# GroupKFold\n","from sklearn.model_selection import KFold\n","\n","# fold = KFold(n_splits=5, shuffle=True, random_state=71)\n","# cv = list(fold.split(train_feat_df, target))\n","\n","class GroupKFold:\n","    \"\"\"\n","    GroupKFold with random shuffle with a sklearn-like structure\n","    \"\"\"\n","\n","    def __init__(self, n_splits=4, shuffle=True, random_state=42):\n","        self.n_splits = n_splits\n","        self.shuffle = shuffle\n","        self.random_state = random_state\n","\n","    def get_n_splits(self, X=None, y=None, group=None):\n","        return self.n_splits\n","\n","    def split(self, X=None, y=None, group=None):\n","        kf = KFold(n_splits=self.n_splits, shuffle=self.shuffle, random_state=self.random_state)\n","        unique_ids = group.unique()\n","        for tr_group_idx, va_group_idx in kf.split(unique_ids):\n","            # split group\n","            tr_group, va_group = unique_ids[tr_group_idx], unique_ids[va_group_idx]\n","            train_idx = np.where(group.isin(tr_group))[0]\n","            val_idx = np.where(group.isin(va_group))[0]\n","            yield train_idx, val_idx\n","\n","\n","# # PlaceID をキーにした Group K fold\n","# def make_gkf(X, y, n_splits=5, random_state=2020):\n","#     gkf = GroupKFold(n_splits=n_splits, random_state=random_state)\n","#     return list(gkf.split(X, y, group))\n","\n","\n","# 評価関数(log(目的変数)を使っているためrmseを用いる)\n","def root_mean_squared_error(y_true, y_pred):\n","    return mean_squared_error(y_true, y_pred) ** .5"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"67OzIsH_de4D"},"source":["# RMSLE → RMSE\n","y = np.log1p(target)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-nL7KM4VlViv"},"source":["# Model"]},{"cell_type":"code","metadata":{"id":"9y83a_GUfRoP"},"source":["import lightgbm as lgb\n","from sklearn.metrics import mean_squared_error\n","from sklearn.linear_model import Ridge"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"AdAzjYUufS3X"},"source":["from abc import abstractmethod\n","class Base_Model(object):\n","    @abstractmethod\n","    def fit(self, x_train, y_train, x_valid, y_valid):\n","        raise NotImplementedError\n","\n","    @abstractmethod\n","    def predict(self, model, features):\n","        raise NotImplementedError\n","\n","    def cv(self, y_train, train_features, test_features, fold_ids):\n","        test_preds = np.zeros(len(test_features))\n","        oof_preds = np.zeros(len(train_features))\n","\n","        for i_fold, (trn_idx, val_idx) in enumerate(fold_ids):\n","            x_trn = train_features.iloc[trn_idx]\n","            y_trn = y_train[trn_idx]\n","            x_val = train_features.iloc[val_idx]\n","            y_val = y_train[val_idx]\n","\n","            with timer(prefix=f'fit fold={i_fold}'):\n","                model = self.fit(x_trn, y_trn, x_val, y_val)\n","\n","            oof_preds[val_idx] = self.predict(model, x_val)\n","            oof_score = np.sqrt(mean_squared_error(y_val, oof_preds[val_idx]))\n","            print('fold{}:RMSLE{}'.format(i_fold, oof_score))\n","            test_preds += self.predict(model, test_features) / len(fold_ids)\n","\n","        oof_score = np.sqrt(mean_squared_error(y_train, oof_preds))\n","        print(f'oof score: {oof_score}')\n","\n","        evals_results = {\"evals_result\": {\n","            \"oof_score\": oof_score,\n","            \"n_data\": len(train_features),\n","            \"n_features\": len(train_features.columns),\n","        }}\n","\n","        return oof_preds, test_preds, evals_results"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3jgxxQMFfmg7"},"source":["cat_col = []\n","class Lgbm(Base_Model):\n","    def __init__(self, model_params):\n","        self.model_params = model_params\n","        self.models = []\n","        self.feature_cols = None\n","\n","    def fit(self, x_train, y_train, x_valid, y_valid):\n","        lgb_train = lgb.Dataset(x_train, y_train)\n","        lgb_valid = lgb.Dataset(x_valid, y_valid)\n","\n","        model = lgb.train(self.model_params,\n","            train_set=lgb_train,\n","            valid_sets=[lgb_valid],\n","            valid_names=['valid'],\n","            categorical_feature=cat_col,\n","            early_stopping_rounds=100,\n","            num_boost_round=10000,\n","            verbose_eval=False)\n","        self.models.append(model)\n","        return model\n","\n","    def predict(self, model, features):\n","        self.feature_cols = features.columns\n","        return model.predict(features)\n","\n","    def visualize_importance(self):\n","        feature_importance_df = pd.DataFrame()\n","\n","        for i,model in enumerate(self.models):\n","            _df = pd.DataFrame()\n","            _df['feature_importance'] = model.feature_importance(importance_type='gain')\n","            _df['column'] = self.feature_cols\n","            _df['fold'] = i+1\n","            feature_importance_df = pd.concat([feature_importance_df, _df],axis=0, ignore_index=True)\n","\n","        order = feature_importance_df.groupby('column').sum()[['feature_importance']].sort_values('feature_importance', ascending=False).index[:50]\n","\n","        fig, ax = plt.subplots(figsize=(max(6, len(order) * .4), 7))\n","        sns.boxenplot(data=feature_importance_df, x='column', y='feature_importance', order=order, ax=ax, palette='viridis')\n","        ax.tick_params(axis='x', rotation=90)\n","        ax.grid()\n","        fig.tight_layout()\n","        return fig,ax\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VKh8E0relQ5b"},"source":["# Learning"]},{"cell_type":"code","metadata":{"id":"yyixUJg3kZeQ"},"source":["lgbm_params = {\n","    \"boosting_type\": \"gbdt\",\n","    'objective': 'regression',\n","    'metric': 'rmse',\n","    'max_depth': 6,\n","    'n_estimators': 10000,\n","    'num_leaves':31,\n","    'learning_rate':0.01,\n","    'colsample_bytree': .5,\n","    \"verbose\":-1\n","}\n","\n","lgbm_model = Lgbm(lgbm_params)\n","oof_preds_lgb, test_preds_lgb, evals_results_lgb = lgbm_model.cv(\n","    y, train_feat_df, test_feat_df, cv\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"13f8dZsClLWw"},"source":["# Stacking"]},{"cell_type":"code","metadata":{"id":"7WkVoaXqlJNU"},"source":["stack_train_df = pd.DataFrame([oof_preds_cat, oof_preds_lgb, oof_preds_xgb]).T\n","stack_test_df = pd.DataFrame([test_preds_cat, test_preds_lgb, test_preds_lgb]).T"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"__yxuNbQltN-"},"source":["stack_model = Rid()\n","oof_preds_stack, test_preds_stack, evals_results_stack = stack_model.cv(\n","    y, stack_train_df, stack_test_df, cv\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2KyN-dKmlxsm"},"source":["fig, ax = plt.subplots(figsize=(8,8))\n","sns.histplot(y, label='target', kde=True, stat='density', common_norm=False, alpha=0.3, color='orange')\n","sns.histplot(test_preds_stack, label='test_pred', kde=True, stat='density', common_norm=False, alpha=0.3)\n","sns.histplot(oof_preds_stack, label='train_pred', kde=True, stat='density', common_norm=False, alpha=0.3, color='red')\n","ax.legend()\n","ax.grid()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BV5tckxTpFGM"},"source":["lgbm_model.visualize_importance()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dEOx8IoRpKx6"},"source":["y_sub = np.expm1(test_preds_stack)\n","submission['LandPrice'] = y_sub\n","\n","submission.to_csv(os.path.join(OUTPUT_DIR, 'sub_' + NB_NAME + '.csv'), index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"SGiehgJRqOji"},"source":[""],"execution_count":null,"outputs":[]}]}